<% content_for :sidebar do %>
  <ul>
    <li>
      <a href="/repos/<%= repo.repo_name %>.html" rel="noopener" class="govuk-link"><%= repo.repo_name %></a>
    </li>
    <li>
      <ul>
        <%
          unless repo.private_repo?
            add_imported_docs = -> (docs_to_import) do
              docs_subdirs = docs_to_import.map { |doc| doc[:path].split("/")[3..(doc[:path].split("/").count - 2)].join("/") }.uniq.reject(&:empty?)
              docs_at_root_level = docs_to_import.reject do |doc|
                docs_subdirs.any? { |subdir| doc[:path].include?(subdir) }
              end
              docs_at_root_level.each do |doc|
        %>
          <li><a href="<%= doc[:path] %>" rel="noopener" class="govuk-link"><%= doc[:title] %></a></li>
          <%
              end
              docs_subdirs.each do |subdir|
          %>
          <li class="subdir__heading"><%= subdir %></li>
          <ul class="subdir__menu">
            <% docs_to_import.select { |doc| doc[:path].include?(subdir) }.each do |doc| %>
              <li><a href="<%= doc[:path] %>" rel="noopener" class="govuk-link"><%= doc[:title] %></a></li>
            <% end %>
          </ul>
        <%
              end # end of `docs_subdirs` iteration
            end # end of add_imported_docs lambda definition
  
            imported_docs = GitHubRepoFetcher.instance.docs(repo.repo_name)
            unless imported_docs.nil? || imported_docs.empty?
              add_imported_docs.call(imported_docs)
            end
          end # end of 'private_repo?' check
        %>
      </ul>
    </li>
  </ul>
<% end %>

<% wrap_layout :core do %>
  <% app_slug = current_page.path.match(/repos\/([^\/]+)\//) %>
  <%= GovukPublishingComponents.render("govuk_publishing_components/components/breadcrumbs", {
    breadcrumbs: [
      { title: "Home", url: "/" },
      current_page.path != "apps.html" ? { title: "Apps", url: "/apps.html" } : nil,
      app_slug ? { title: app_slug[1], url: "/repos/#{app_slug[1]}.html" } : nil,
    ].compact,
  }) %>
  <%= partial 'partials/last_updated' if current_page.data.show_last_updated %>
  <%= partial 'partials/header' %>
  <%= yield %>
<% end %>
