name: Dependabot auto-merge
on: pull_request_target

permissions:
  contents: write
  pull-requests: write

jobs:
  validate_this_is_dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - run: echo "This PR was raised by Dependabot. Now let's see if we should auto-merge..."
  validate_this_is_an_allowed_dependency:
    needs: validate_this_is_dependabot
    runs-on: ubuntu-latest
    outputs:
      is_allowed_dependency: ${{ steps.check_if_allowed_dependency.outputs.is_allowed_dependency }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.3.4
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - if: ${{contains(env.AUTO_MERGE, steps.metadata.outputs.dependency-names) && contains(env.SEMVER, steps.metadata.outputs.update-type)}}
        id: check_if_allowed_dependency
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          AUTO_MERGE: ("govuk_publishing_components")
          SEMVER: ("version-update:semver-patch")
        run: echo "is_allowed_dependency=1" >> "$GITHUB_OUTPUT"
  validate_ci_build_passes:
    runs-on: ubuntu-latest
    needs: validate_this_is_an_allowed_dependency
    if: ${{ needs.validate_this_is_an_allowed_dependency.outputs.is_allowed_dependency == 1 }}
    steps:
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: test
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
  auto_approve_and_merge:
    runs-on: ubuntu-latest
    needs: [validate_this_is_dependabot, validate_this_is_an_allowed_dependency, validate_ci_build_passes]
    steps:
      - name: Approve the PR
        uses: hmarr/auto-approve-action@v3.1.0
        with:
          github-token: ${{ secrets.APPROVE_PR_ACCESS_TOKEN }}
      - name: Merge the PR
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  